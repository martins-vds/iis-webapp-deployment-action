name: 'IIS Web Application Deployment'
description: 'IIS Web Application Deployment'
inputs:
  machines:  # id of input
    description: 'Provide a comma separated list of the machine(s) IP addresses or FQDNs along with ports. The port is defaulted based on the selected protocol or can be provided separately. For example, dbserver.fabrikam.com, dbserver_int.fabrikam.com:5986, 192.168.12.34:40004. If you are using HTTPS, name/IP of machine should match the CN in the certificate.'
    required: true
  admin-login:
    description: 'Provide the administrator"s login of the target machines.'
    required: true
  password:
    description: 'Provide the administrator"s password of the target machines. The best practice is to create a variable in the Build or Release definition, and mark it as Secret to secure it, and then use it here, like $(adminPassword).'
    required: true
  protocol:
    description: 'Select the network protocol to use for the WinRM connection with the machine(s). The default is HTTPS.'
    required: true
    default: 'HTTPS'
  test-certificate:
    description: 'Select the option to skip validating the authenticity of the machines certificate from a trusted certification authority. The parameter is required for the WinRM HTTPS protocol.'
    required: false
    default: 'true'
  web-deploy-package:
    description: 'Location of the Web Deploy (MSDeploy) zip file on the target machine(s) or on a UNC path, like \\BudgetIT\WebDeploy\WebDeployPackage.zip. The UNC path should be accessible to the machine"s administrator account. Environment variables are also supported, like $env:windir, $env:systemroot, $env:windir\FabrikamFibre\Web.'
    required: true
  website-name:
    description: 'Provide the name of the website for deploying the Web project to.'
    required: true
runs:
  using: "composite"
  steps:
    - run: >
        ${{ github.action_path }}/scripts/DeployIISWebApp.ps1
        ${{ inputs.machines }}
        ${{ inputs.admin-login }}
        ${{ inputs.password }}
        ${{ inputs.protocol }}
        ${{ inputs.test-certificate }}
        ${{ inputs.web-deploy-package }}
        ${{ inputs.website-name }}
      shell: pwsh
